#
# Copyright (C) 2012 BMW Car IT GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##
# @page "Getting Started"
# 
# > ## Example of a small ACME project
# In order to demonstrate the usage of \a ACME, the small sample project \b "HelloACME" is presented here. 
# In the topmost project directory there is a `CMakeList.txt` with the following commands:
# 
# <img src="cmakelist1.png" align="left" vspace="10" hspace="20" alt="project_structure">
# <p>\n The command \b CMAKE_MINIMUM_REQUIRED determines the required CMake version. If the used version is older, \n
# then the process will be stopped and an error will be printed. \b PROJECT specifies the name or the created workspace of the new project. \n
# The \b INCLUDE command adds the used ACME script \a acme.cmake. This script looks for toolchain files, for plugins and performs the first configurations. \n
# The command [ACME_ADD_SUBDIRECTORY](@ref ACME_ADD_SUBDIRECTORY) tells CMake, that there is a directory "modules" with an additional `CMake_Lists.txt`. \n
# [ACME_FINALIZE](@ref ACME_FINALIZE) creates, if the cache variable `CONFIG_BUILD_GLOBAL_TEST_EXECUTABLE` has been set to "TRUE", a test executable and prints the "configuration report". 
# <br clear="all"></p>
# \n\n\n\n\n\n\n\n\n\n\n
#
# <img src="cmakelist2.png" align="left" vspace="10" hspace="20" alt="project_structure">
# <p>\n The `CmakeList.txt` in the directory "modules" contains only the command [ACME_ADD_SUBDIRECTORY](@ref ACME_ADD_SUBDIRECTORY). \n
# It tells CMake, that there exists the folders "Hello"and "Main" with additional `CMake_Lists.txt`.
# <br clear="all"></p>
# \n\n\n\n\n\n\n
#
# <img src="cmakelist3.png" align="left" vspace="10" hspace="20" alt="project_structure">
# <p>\n This is an image of the `CMakeList.txt` of the module "Hello". \n\n
# By means of the command [ACME_ADD_MODULE](@ref ACME_ADD_MODULE) the module properties will be set and loaded into the cache. \n
# As moduletypes you can choose "static", "dynamic", "exe" or "tests". \n
# [ACME_ADD_FILE](@ref ACME_ADD_FILE) selects the used files. You have to state the filename without file extensions, \a ACME automatically \n
# looks for source files and test files. \n
# [ACME_REQUIRED_PACKAGE](@ref ACME_REQUIRED_PACKAGE) indentifies, depending on the operating system, the package include directories and the package libraries. \n
# <br clear="all"></p>
# \n\n\n
#
#
# <img src="cmakelist4.png" align="left" vspace="10" hspace="20" alt="project_structure">
# <p>\n The `CMakeList.txt` in the module "Main" looks very similar. \n
# Here the command [ACME_ADD_DEPENDENCY](@ref ACME_ADD_DEPENDENCY) additionally adds a dependency to the module "Hello". 
# <br clear="all"></p>
# \n\n\n\n\n\n\n\n\n\n\n
#
#
#
#
#
#
#
#
#
#
#
